import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

class Student {
    private String id;
    private String name;
    private byte midterm;
    private byte finalExam;

    public Student(String sid, String n, byte m, byte f) {
        id = sid;
        name = n;
        midterm = m;
        finalExam = f;
    }

    public char grade() {
        double average = (midterm + finalExam);
        if (average >= 80) {
            return 'A';
        } else if (average >= 70) {
            return 'B';
        } else if (average >= 60) {
            return 'C';
        } else if (average >= 50) {
            return 'D';
        } else {
            return 'F';
        }
    }

    public void showStudent(ArrayList<Student> students) {
        System.out.printf("%-5s %-7s %-20s %-10s %-10s %-5s\n", "No.", "ID", "Name", "Midterm", "Final", "Grade");
        System.out.println("-----------------------------------------------------------");

        for (int i = 0; i < students.size(); i++) {
            Student student = students.get(i);
            System.out.printf("%-5d %-7s %-20s %-10d %-10d %-5c\n",
                    i + 1, student.id, student.name, student.midterm, student.finalExam, student.grade());
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ArrayList<Student> students = new ArrayList<>();

        for (int i = 0; i < 5; i++) {
            System.out.println("Enter information for student " + (i + 1) + ":");
            System.out.print("ID: ");
            String id = scanner.next();
            System.out.print("Name: ");
            String name = scanner.next();
            System.out.print("Midterm score: ");
            byte midterm = scanner.nextByte();
            System.out.print("Final exam score: ");
            byte finalExam = scanner.nextByte();

            students.add(new Student(id, name, midterm, finalExam));
        }

        Collections.sort(students, (s1, s2) -> Character.compare(s1.grade(), s2.grade()));

        // Create an instance of Student to call the non-static method
        Student studentInstance = new Student("", "", (byte) 0, (byte) 0);
        studentInstance.showStudent(students);
    }
}
